trigger:
  paths:
    include:
    - Terraform
    exclude:
    - Terraform/deploy.sh
    - Terraform/clean.sh

parameters:
  - name: Destroy
    displayName: Destroy infrastructure
    type: boolean
    default: false

pool:
  vmImage: ubuntu-latest

stages:

- stage: Plan
  condition: not(${{ parameters.Destroy }})
  jobs:
  - job: Plan
    steps:
    - task: TerraformTaskV4@4
      inputs:
        provider: azurerm
        command: init
        workingDirectory: Terraform
        environmentServiceNameAzureRM: StefMicrosoft
        backendServiceArm: StefMicrosoft
        backendAzureRmResourceGroupName: rg-iacdemo
        backendAzureRmStorageAccountName: saiacdevweu
        backendAzureRmContainerName: terraform
        backendAzureRmKey: demo.tfstate
    - task: TerraformTaskV4@4
      inputs:
        provider: azurerm
        command: plan
        workingDirectory: Terraform
        environmentServiceNameAzureRM: StefMicrosoft

- stage: Apply
  dependsOn: Plan
  condition: not(${{ parameters.Destroy }})
  jobs:
  - deployment: ApplyTemplate
    displayName: Apply
    environment: StefMicrosoftEnvironment
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: TerraformTaskV4@4
            inputs:
              provider: azurerm
              command: init
              workingDirectory: Terraform
              environmentServiceNameAzureRM: StefMicrosoft
              backendServiceArm: StefMicrosoft
              backendAzureRmResourceGroupName: rg-iacdemo
              backendAzureRmStorageAccountName: saiacdevweu
              backendAzureRmContainerName: terraform
              backendAzureRmKey: demo.tfstate
          - task: TerraformTaskV4@4
            inputs:
              provider: azurerm
              command: apply
              workingDirectory: Terraform
              environmentServiceNameAzureRM: StefMicrosoft

- stage: Destroy
  condition: ${{ parameters.Destroy }}
  jobs:
  - deployment: DestroyTemplate
    displayName: Destroy
    environment: StefMicrosoftEnvironment
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: TerraformTaskV4@4
            inputs:
              provider: azurerm
              command: init
              workingDirectory: Terraform
              environmentServiceNameAzureRM: StefMicrosoft
              backendServiceArm: StefMicrosoft
              backendAzureRmResourceGroupName: rg-iacdemo
              backendAzureRmStorageAccountName: saiacdevweu
              backendAzureRmContainerName: terraform
              backendAzureRmKey: demo.tfstate
          - task: TerraformTaskV4@4
            inputs:
              provider: azurerm
              command: destroy
              workingDirectory: Terraform
              environmentServiceNameAzureRM: StefMicrosoft
